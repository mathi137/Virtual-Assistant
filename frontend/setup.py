#!/usr/bin/env python
"""
Script de inicializa√ß√£o do Frontend Django
"""
import os
import sys
import django
from pathlib import Path

# Adiciona o diret√≥rio do projeto ao PATH
BASE_DIR = Path(__file__).resolve().parent
sys.path.append(str(BASE_DIR))

# Configura o Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    dirs = [
        BASE_DIR / 'static',
        BASE_DIR / 'staticfiles',
        BASE_DIR / 'media',
        BASE_DIR / 'logs',
    ]
    
    for directory in dirs:
        directory.mkdir(exist_ok=True)
        print(f"‚úì Diret√≥rio criado: {directory}")

def check_environment():
    """Verifica se o ambiente est√° configurado corretamente"""
    print("üîç Verificando ambiente...")
    
    # Verifica arquivo .env
    env_file = BASE_DIR / '.env'
    if not env_file.exists():
        print("‚ö†Ô∏è  Arquivo .env n√£o encontrado. Copiando .env.example...")
        import shutil
        shutil.copy(BASE_DIR / '.env.example', env_file)
        print("‚úì Arquivo .env criado. Configure as vari√°veis antes de prosseguir.")
    
    # Verifica depend√™ncias
    try:
        import django
        import requests
        print("‚úì Depend√™ncias principais encontradas")
    except ImportError as e:
        print(f"‚ùå Depend√™ncia n√£o encontrada: {e}")
        print("Execute: pip install -r requirements.txt")
        return False
    
    return True

def run_migrations():
    """Executa migra√ß√µes do Django"""
    print("üì¶ Executando migra√ß√µes...")
    from django.core.management import execute_from_command_line
    
    try:
        execute_from_command_line(['manage.py', 'migrate'])
        print("‚úì Migra√ß√µes executadas com sucesso")
    except Exception as e:
        print(f"‚ùå Erro nas migra√ß√µes: {e}")
        return False
    
    return True

def collect_static():
    """Coleta arquivos est√°ticos"""
    print("üé® Coletando arquivos est√°ticos...")
    from django.core.management import execute_from_command_line
    
    try:
        execute_from_command_line(['manage.py', 'collectstatic', '--noinput'])
        print("‚úì Arquivos est√°ticos coletados")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erro ao coletar est√°ticos: {e}")

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Inicializando Frontend PIE IV...")
    print("=" * 50)
    
    # Verifica ambiente
    if not check_environment():
        return
    
    # Cria diret√≥rios
    create_directories()
    
    # Executa migra√ß√µes
    if not run_migrations():
        return
    
    # Coleta arquivos est√°ticos
    collect_static()
    
    print("=" * 50)
    print("‚úÖ Frontend inicializado com sucesso!")
    print()
    print("Para executar o servidor de desenvolvimento:")
    print("  python manage.py runserver 0.0.0.0:3000")
    print()
    print("URLs dispon√≠veis:")
    print("  Dashboard: http://localhost:3000")
    print("  Admin:     http://localhost:3000/admin")
    print()
    print("Certifique-se de que o backend est√° rodando em:")
    print("  API:       http://localhost:8000")

if __name__ == '__main__':
    main()